openapi: 3.0.2
info:
  title: CulebraTester
  description: |
    ## Snaky Android Test
    ---
    If you want to be able to try out the API using the **Execute** or **TRY** button from this page
    - an android device should be connected using `adb`
    - the server should have been started using `./culebratester2 start-server`

    then you will be able to invoke the API and see the responses.
  version: 2.0.74
servers:
  - url: http://localhost:9987/v2
paths:
  /am/forceStop:
    get:
      description: Completely stop the given application package.
      parameters:
      - description: The package name
        in: query
        name: pkg
        required: true
        schema:
          example: com.example.app
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Completely stop the given application package.
  /configurator/getWaitForIdleTimeout:
    get:
      description: 'Gets the current timeout used for waiting for the user
        interface to go into an idle state. By default, all core
        uiautomator objects except `UiDevice` will perform this
        wait before starting to search for the widget specified
        by the object''s `UiSelector`. Once the idle state is
        detected or the timeout elapses (whichever occurs firs),
        the object will start to wait for the selector to find
        match. See `setWaitForSelectorTimeout(long)`'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeout'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the current timeout used for waiting for the user interface to
        go into an idle state.
  /configurator/setWaitForIdleTimeout:
    get:
      description: Sets the timeout for waiting for the user interface to go into
        an idle state before starting a uiautomator action. By default, all core uiautomator
        objects except `UiDevice` will perform this wait before starting to search
        for the widget specified by the object's `UiSelector`. Once the idle state
        is detected or the timeout elapses (whichever occurs first), the object will
        start to wait for the selector to find a match. See `setWaitForSelectorTimeout(long)`
      parameters:
      - description: Timeout value in milliseconds
        in: query
        name: timeout
        required: true
        schema:
          example: 10000
          format: int64
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Sets the timeout for waiting for the user interface to go into an idle
        state before starting a uiautomator action.
  /culebra/help/{api}:
    get:
      description: 'Gets help info about the *API* specified as parameter. For example
        you can obtain information about

        * /uiDevice/click

        * /device/displayRealSize

        * /uiDevice/screenshot

        * etc.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Help'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets help
    parameters:
    - description: Specify the API help is about
      in: path
      name: api
      required: true
      schema:
        type: string
  /culebra/info:
    get:
      description: Gets information about this app.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulebraInfo'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets information about this app.
  /culebra/quit:
    get:
      description: Quits cuebra server.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Quits culebra server.
  /device/displayRealSize:
    get:
      description: Gets the display real size.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayRealSize'
          description: Display real size
        default:
          $ref: '#/components/responses/error'
      summary: Gets display real size.
  /device/dumpsys:
    get:
      description: dumpsys is a tool that runs on Android devices and provides information about system services. You can call dumpsys from the command line using the Android Debug Bridge (ADB) to get diagnostic output for all system services running on a connected device.
      parameters:
      - name: service
        in: query
        description: dumps only service SERVICE
        required: true
        schema:
          example: usb
          format: string
      - name: arg1
        in: query
        description: argument 1 for dumpsys service command
        required: false
        schema:
          format: string
      - name: arg2
        in: query
        description: argument 2 for dumpsys service command
        required: false
        schema:
          format: string
      - name: arg3
        in: query
        description: argument 3 for dumpsys service command
        required: false
        schema:
          format: string
      responses:
        '200':
          content:
            text/plain:
              example: Hello
          description: dumpsys output
  /device/locale:
    get:
      description: Gets the device locale
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
          description: The locale
    post:
      description: Changes the device locale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locale'
            example:
              language: es
              country: US
        description: The locale
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
  /device/waitForNewToast:
    get:
      description: Waits for a new Toast until timeout.
      parameters:
      - description: The timeout in ms
        in: query
        name: timeout
        required: false
        schema:
          example: 10000
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Text'
          description: New Toast found
        default:
          $ref: '#/components/responses/error'
      summary: Waits for a new Toast.
  /objectStore/clear:
    get:
      description: Clears all the objects in store.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clears all the objects in store.
  /objectStore/list:
    get:
      description: Lists the objects in store.
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    obj:
                      $ref: '#/components/schemas/AnyValue'
                    oid:
                      type: integer
                  type: object
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Lists the objects in store.
  /objectStore/remove:
    get:
      description: Removes an object that has been stored in ObjectStore.
      parameters:
      - description: The object ID
        in: query
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Removes an object.
  /targetContext/startActivity:
    get:
      description: Starts an Activity.
      parameters:
      - description: the package name
        in: query
        name: pkg
        required: true
        schema:
          type: string
      - description: the class name
        in: query
        name: cls
        required: true
        schema:
          type: string
      - description: the URI (i. e. https://example.com)
        in: query
        name: uri
        required: false
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Starts an Activity.
  /uiDevice/clearLastTraversedText:
    get:
      description: Clears the text from the last UI traversal event.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clears the text from the last UI traversal event.
  /uiDevice/click:
    get:
      description: Clicks at the specified location.
      parameters:
      - description: x coordinate
        in: query
        name: x
        required: true
        schema:
          minimum: 0
          type: integer
      - description: y coordinate
        in: query
        name: y
        required: true
        schema:
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
            text/plain:
              example: OK
              schema:
                type: string
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Clicks at the specified location.
    post:
      description: Clicks at the specified locations.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClickBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clicks at the specified locations.
  /uiDevice/currentPackageName:
    get:
      description: Gets the current package name.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPackageName'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the current package name.
  /uiDevice/displayHeight:
    get:
      description: Gets the display height.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayHeight'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the display height.
  /uiDevice/displayRotation:
    get:
      description: Gets the display rotation.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayRotationResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the display rotation.
  /uiDevice/displaySizeDp:
    get:
      description: Gets the display size in DP.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplaySizeDp'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the display size in DP.
  /uiDevice/displayWidth:
    get:
      description: Gets the display width.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayWidth'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the display width.
  /uiDevice/drag:
    get:
      description: Performs a swipe from one coordinate to another coordinate. You
        can control the smoothness and speed of the swipe by specifying the number
        of steps. Each step execution is throttled to 5 milliseconds per step, so
        for a 100 steps, the swipe will take around 0.5 seconds to complete.
      parameters:
      - description: from x
        in: query
        name: startX
        required: true
        schema:
          minimum: 0
          type: integer
      - description: from y
        in: query
        name: startY
        required: true
        schema:
          minimum: 0
          type: integer
      - description: to x
        in: query
        name: endX
        required: true
        schema:
          minimum: 0
          type: integer
      - description: end y
        in: query
        name: endY
        required: true
        schema:
          minimum: 0
          type: integer
      - description: is the number of move steps sent to the system
        in: query
        name: steps
        required: true
        schema:
          minimum: 0
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Performs a swipe from one coordinate to another coordinate.
  /uiDevice/dumpWindowHierarchy:
    get:
      description: Dumps the window hierarchy.
      parameters:
      - description: the output format
        in: query
        name: format
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowHierarchy'
            application/xml:
              schema:
                $ref: '#/components/schemas/WindowHierarchy'
          description: Window hierarchy
        default:
          $ref: '#/components/responses/error'
      summary: Dumps the window hierarchy.
  /uiDevice/findObject:
    get:
      description: Finds an object. The object found, if any, can be later used in
        other call like API.click.
      parameters:
      - description: the resource id
        example: com.android.calendar:id/d0_label
        in: query
        name: resourceId
        schema:
          type: string
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - clazz or className - clickable - depth - desc
          - index - instance - package - parentIndex - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,instance@1
        in: query
        name: uiSelector
        schema:
          type: string
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - checkable - clazz - clickable - depth - desc
          - package - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,depth@2
        in: query
        name: bySelector
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.TextView
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Object found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Finds an object.
    post:
      description: Finds an object. The object found, if any, can be later used in
        other call like API.click.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selector'
        description: Selector
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.Button
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Object found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Finds an object.
  /uiDevice/findObjects:
    get:
      description: Finds objects. The object found, if any, can be later used in
        other call like API.click.
      parameters:
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - checkable - clazz - clickable - depth - desc
          - package - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,depth@2
        in: query
        name: bySelector
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
              - className: android.widget.Button
                oid: 1
              - className: android.widget.TextView
                oid: 2
              schema:
                items:
                  $ref: '#/components/schemas/ObjectRef'
                type: array
          description: Objects found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Finds *all* objects that match the selector criteria.
    post:
      description: Finds all objects. The objects found, if any, can be later used in
        other call like API.click.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selector'
        description: Selector
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
              - className: android.widget.Button
                oid: 1
              - className: android.widget.TextView
                oid: 2
              schema:
                items:
                  $ref: '#/components/schemas/ObjectRef'
                type: array
          description: Objects found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Finds *all* objects.
  /uiDevice/freezeRotation:
    get:
      description: Disables the sensors and freezes the device rotation at its current
        rotation state.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Disables the sensors and freezes the device rotation at its current
        rotation state.
  /uiDevice/hasObject:
    get:
      description: Returns whether there is a match for the given selector criteria.
      parameters:
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - checkable - clazz - clickable - depth - desc
          - package - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,depth@2
        in: query
        name: bySelector
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/trueResponse'
        default:
          $ref: '#/components/responses/error'
      summary: Returns whether there is a match for the given selector criteria.
    post:
      description: Returns whether there is a match for the given selector criteria.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selector'
        description: Selector
        required: true
      responses:
        '200':
          $ref: '#/components/responses/trueResponse'
        default:
          $ref: '#/components/responses/error'
      summary: Returns whether there is a match for the given selector criteria.
  /uiDevice/isNaturalOrientation:
    get:
      description: This is determined by checking if the orientation is at 0 or 180
        degrees.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Check if the device is in its natural orientation.
  /uiDevice/isScreenOn:
    get:
      description: Checks the power manager if the screen is ON.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Checks the power manager if the screen is ON.
  /uiDevice/lastTraversedText:
    get:
      description: Retrieves the text from the last UI traversal event received.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastTraversedText'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Retrieves the text from the last UI traversal event received.
  /uiDevice/pixel:
    get:
      description: 'Gets a pixel on the device screen screenshot.

        '
      parameters:
      - description: The x coordinate
        example: 300
        in: query
        name: x
        required: true
        schema:
          minimum: 0
          type: integer
      - description: The y coordinate
        example: 1020
        in: query
        name: y
        required: true
        schema:
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                a: 255
                b: 123
                g: 140
                r: 132
              schema:
                $ref: '#/components/schemas/Pixel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Cannot obtain pixel
      summary: Gets a pixel from device screen.
  /uiDevice/pressBack:
    get:
      description: Simulates a short press on the BACK button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the BACK button.
  /uiDevice/pressDPadCenter:
    get:
      description: Simulates a short press on the CENTER button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the CENTER button.
  /uiDevice/pressDPadDown:
    get:
      description: Simulates a short press on the DOWN button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the DOWN button.
  /uiDevice/pressDPadLeft:
    get:
      description: Simulates a short press on the LEFT button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the LEFT button.
  /uiDevice/pressDPadRight:
    get:
      description: Simulates a short press on the RIGHT button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the RIGHT button.
  /uiDevice/pressDPadUp:
    get:
      description: Simulates a short press on the UP button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the UP button.
  /uiDevice/pressDelete:
    get:
      description: Simulates a short press on the DELETE key.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the DELETE key.
  /uiDevice/pressEnter:
    get:
      description: Simulates a short press on the ENTER key.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the ENTER key.
  /uiDevice/pressHome:
    get:
      description: Simulates a short press on the HOME button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the HOME button.
  /uiDevice/pressKeyCode:
    get:
      description: Simulates a short press using a key code.
      parameters:
      - description: the key code of the event.
        in: query
        name: keyCode
        required: true
        schema:
          type: integer
      - description: an integer in which each bit set to 1 represents a pressed meta
          key
        in: query
        name: metaState
        required: false
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press using a key code.
  /uiDevice/pressRecentApps:
    get:
      description: Simulates a short press on the Recent Apps button.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Simulates a short press on the Recent Apps button.
  /uiDevice/productName:
    get:
      description: Retrieves the product name of the device.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductName'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Retrieves the product name of the device.
  /uiDevice/screenshot:
    get:
      description: 'Gets the device screenshot and can be influenced by the parameters.
        For example the `scale` of the screenshot or its `quality` can be specified.
        **NOTE**: [`UiDevice.takeScreenshot()`](https://developer.android.com/reference/android/support/test/uiautomator/UiDevice.html#takeScreenshot(java.io.File,%20float,%20int))
        usually ignores these parameters so expect no change.

        '
      parameters:
      - description: The scale of the screenshot (i.e. 0.5)
        example: 0.5
        in: query
        name: scale
        required: false
        schema:
          exclusiveMinimum: true
          format: float
          maximum: 1
          minimum: 0
          type: number
      - description: The quality of the screenshot (i.e. 100)
        example: 90
        in: query
        name: quality
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            image/png:
              examples:
                exernal-image-example:
                  externalValue: https://raw.githubusercontent.com/wiki/dtmilano/AndroidViewClient/images/emulator-launcher-shortcuts.png
                  summary: External example image
              schema:
                format: binary
                type: string
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Cannot obtain screenshot
      summary: Gets the device screenshot.
  /uiDevice/swipe:
    get:
      description: Performs a swipe from one coordinate to another using the number
        of steps to determine smoothness and speed. Each step execution is throttled
        to 5ms per step. So for a 100 steps, the swipe will take about 1/2 second
        to complete.
      parameters:
      - description: from x
        in: query
        name: startX
        required: true
        schema:
          minimum: 0
          type: integer
      - description: from y
        in: query
        name: startY
        required: true
        schema:
          minimum: 0
          type: integer
      - description: to x
        in: query
        name: endX
        required: true
        schema:
          minimum: 0
          type: integer
      - description: end y
        in: query
        name: endY
        required: true
        schema:
          minimum: 0
          type: integer
      - description: is the number of move steps sent to the system
        in: query
        name: steps
        required: true
        schema:
          minimum: 0
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Performs a swipe.
    post:
      description: Each step execution is throttled to 5ms per step. So for a 100
        steps, the swipe will take about 1/2 second to complete.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwipeBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Performs a swipe between points in the Point array.
  /uiDevice/unfreezeRotation:
    get:
      description: During a test execution, it is best to keep the device frozen in
        a specific orientation until the test case execution has completed.
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Re-enables the sensors and un-freezes the device rotation allowing
        its contents to rotate with the device physical rotation
  /uiDevice/wait:
    get:
      description: The final result returned by the condition, or null if the condition
        was not met before the timeout.
      parameters:
      - description: The search condition object ID
        in: query
        name: oid
        required: true
        schema:
          example: 1
          format: int64
          type: integer
      - description: The timeout in ms
        in: query
        name: timeout
        required: false
        schema:
          example: 10000
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.Button
                oid: 1
              schema:
                $ref: '#/components/schemas/AnyValue'
          description: Some objects found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Waits for given the condition to be met.
  /uiDevice/waitForIdle:
    get:
      description: Waits for the current application to idle.
      parameters:
      - description: in milliseconds
        in: query
        name: timeout
        schema:
          default: 10000
          format: int64
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Waits for the current application to idle.
  /uiDevice/waitForWindowUpdate:
    get:
      description: If a package name for the window is specified, but the current
        window does not have the same package name, the function returns immediately.
      parameters:
      - description: the specified window package name (can be null or not present).
          If null, a window update from any front-end window will end the wait.
        in: query
        name: packageName
        required: false
        schema:
          type: string
      - description: in milliseconds
        in: query
        name: timeout
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Waits for a window content update event to occur.
  /uiObject/{oid}/clearTextField:
    get:
      description: Clears the existing text contents in an editable field. The UiSelector of this object must reference a UI element that is editable. When you call this method, the method sets focus on the editable field, selects all of its existing content, and clears it by sending a DELETE key press.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clears the existing text contents in an editable field.
  /uiObject/{oid}/click:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clicks on the specified object.
  /uiObject/{oid}/clickAndWaitForNewWindow:
    get:
      description: Performs a click at the center of the visible bounds of the UI element represented by this UiObject and waits for window transitions. This method differ from click only in that this method waits for a a new window transition as a result of the click.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      - description: Timeout in milliseconds
        in: query
        name: timeout
        schema:
          default: 10000
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Clicks on the specified object.
  /uiObject/{oid}/dump:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selector'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Dumps the specified object.
  /uiObject/{oid}/exists:
    get:
      description: Check if view exists. This methods performs a waitForExists with zero timeout.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: This basically returns immediately whether the view represented by this UiObject exists or not. If you need to wait longer for this view, then see waitForExists.
  /uiObject/{oid}/getBounds:
    get:
      description: Returns the view's bounds property. See getVisibleBounds.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rect'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Returns the view's bounds property.
  /uiObject/{oid}/getChild:
    get:
      description: Creates a new UiObject for a child view that is under the present UiObject.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
        - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - clazz or className - clickable - depth - desc
          - index - instance - package - parentIndex - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
          example: res@com.android.calendar:id/d0_label,instance@1
          in: query
          name: uiSelector
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.TextView
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Object found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: The child
  /uiObject/{oid}/getChildCount:
    get:
      description: Counts the child views immediately under the present UiObject.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Counts the child views immediately under the present UiObject.
  /uiObject/{oid}/getClassName:
    get:
      description: Retrieves the className property of the UI element.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Retrieves the className property of the UI element.
  /uiObject/{oid}/getContentDescription:
    get:
      description: Reads the content_desc property of the UI element.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Reads the content_desc property of the UI element.
  /uiObject/{oid}/getFromParent:
    get:
      description: Creates a new UiObject for a sibling view or a child of the sibling view, relative to the present UiObject.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
        - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - clazz or className - clickable - depth - desc
          - index - instance - package - parentIndex - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
          example: res@com.android.calendar:id/d0_label,instance@1
          in: query
          name: uiSelector
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.TextView
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Object found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Creates a new UiObject for a sibling view or a child of the sibling view, relative to the present UiObject.
  /uiObject/{oid}/performTwoPointerGesture:
    post:
      description: Generates a two-pointer gesture with arbitrary starting and ending points.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformTwoPointerGestureBody'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
  /uiObject/{oid}/pinchIn:
    get:
      description: Performs a two-pointer gesture, where each pointer moves diagonally toward the other, from the edges to the center of this UiObject.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      - description: percentage of the object's diagonal length for the pinch gesture
        in: query
        name: percentage
        required: true
        schema:
          type: integer
          minimum: 0
      - description: the number of steps for the gesture. Steps are injected about 5 milliseconds apart, so 100 steps may take around 0.5 seconds to complete.
        in: query
        name: steps
        required: true
        schema:
          type: integer
          minimum: 0
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
  /uiObject/{oid}/pinchOut:
    get:
      description: Performs a two-pointer gesture, where each pointer moves diagonally opposite across the other, from the center out towards the edges of the this UiObject.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      - description: percentage of the object's diagonal length for the pinch gesture
        in: query
        name: percentage
        required: true
        schema:
          type: integer
          minimum: 0
      - description: the number of steps for the gesture. Steps are injected about 5 milliseconds apart, so 100 steps may take around 0.5 seconds to complete.
        in: query
        name: steps
        required: true
        schema:
          type: integer
          minimum: 0
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
  /uiObject/{oid}/waitForExists:
    get:
      description: Waits a specified length of time for a view to become visible.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
        - description: the amount of time to wait (in milliseconds)
          in: query
          name: timeout
          required: true
          schema:
            example: 10000
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: This method waits until the view becomes visible on the display, or until the timeout has elapsed. You can use this method in situations where the content that you want to select is not immediately displayed.  
  /uiObject2/{oid}/clear:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clears the text content if this object is an editable field.
  /uiObject2/{oid}/click:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clicks on the specified object.
  /uiObject2/{oid}/clickAndWait:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      - description: The event condition
        in: query
        name: eventConditionRef
        required: true
        schema:
          example: 1
          format: int64
          type: integer
      - description: in milliseconds
        in: query
        name: timeout
        schema:
          default: 10000
          format: int64
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Clicks on the specified object.
  /uiObject2/{oid}/dump:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selector'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Dumps the specified object.
  /uiObject2/{oid}/getChildCount:
    get:
      description: Returns the number of child elements directly under this object.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberResponse'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Returns the number of child elements directly under this object.
  /uiObject2/{oid}/getChildren:
    get:
      description: Returns a collection of the child elements directly under this object.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              example:
              - className: android.widget.Button
                oid: 1
              - className: android.widget.TextView
                oid: 2
              schema:
                items:
                  $ref: '#/components/schemas/ObjectRef'
                type: array
          description: Children found
        default:
          $ref: '#/components/responses/error'
  /uiObject2/{oid}/getContentDescription:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Text'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Returns the content description for this object.
  /uiObject2/{oid}/findObject:
    get:
      description: Searches all elements under this object and returns the first object to match the criteria, or not found if no matching objects are found.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - checkable - clazz - clickable - depth - desc
          - package - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,depth@2
        in: query
        name: bySelector
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.TextView
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Object found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Finds an object.
    post:
      description: Searches all elements under this object and returns the first object to match the criteria, or not found if no matching objects are found.
      parameters:
        - description: The object ID
          in: path
          name: oid
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selector'
        description: Selector
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                className: android.widget.Button
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Object found
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Finds an object.  
  /uiObject2/{oid}/getText:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Text'
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Gets the text content.
  /uiObject2/{oid}/longClick:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Long-clicks on the specified object.
  /uiObject2/{oid}/setText:
    get:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      - description: Text to enter in the field
        in: query
        name: text
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Sets the text content if this object is an editable field.
    post:
      description: The target object should have been found using `findObject` with
        a `selector`.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Text'
        description: Text to enter in the field
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ok'
        default:
          $ref: '#/components/responses/error'
      summary: Sets the text content if this object is an editable field.
  /until/{oid}/dump:
    get:
      description: Dumps the Until object.
      parameters:
      - description: The object ID
        in: path
        name: oid
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
        default:
          $ref: '#/components/responses/error'
      summary: Dumps the specified object.
  /until/findObject:
    get:
      description: The condition will return the first matching element.
      parameters:
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - checkable - clazz - clickable - depth - desc
          - package - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,depth@2
        in: query
        name: bySelector
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                className: androidx.test.uiautomator.Until$3@41c9fff
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: SearchCondition created
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: SearchCondition not created
        default:
          $ref: '#/components/responses/error'
      summary: Returns a SearchCondition that is satisfied when at least one element
        matching the selector can be found.
    post:
      description:  The condition will return the first matching element.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selector'
        description: Selector
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                className:   androidx.test.uiautomator.Until$3@41c9fff
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: The SearchCondition reference
        '404':
          content:
            application/json:
              example:
                errorMessage: SearchCondition not created
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Returns a SearchCondition that is satisfied when at least one element
        matching the selector can be found.
  /until/findObjects:
    get:
      description: Finds an object. The object found, if any, can be later used in other call like API.click.
      parameters:
      - description: 'the selector sets the resource name criteria for matching. A
          UI element will be considered a match if its resource name exactly matches
          the selector parameter and all other criteria for this selector are met.
          The format of the selector string is

          `sel@[\$]value,...`

          Where `sel` can be one of - checkable - clazz - clickable - depth - desc
          - package - res - scrollable - text

          `@` replaces the `=` sign that is used to separate parameters and values
          in the URL. If the first character of value is `$` then a `Pattern` is created.'
        example: res@com.android.calendar:id/d0_label,depth@2
        in: query
        name: bySelector
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                className: androidx.test.uiautomator.Until$3@41c9fff
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: Objects found
        '404':
          content:
            application/json:
              example:
                errorMessage: SearchCondition not created
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Returns a SearchCondition that is satisfied when at least one element
        matching the selector can be found. 
    post:
      description: Returns a SearchCondition that is satisfied when at least one element
        matching the selector can be found.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selector'
        description: Selector
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                className: androidx.test.uiautomator.Until$3@41c9fff
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: SearchCondition created
        '404':
          content:
            application/json:
              example:
                errorMessage: SearchCondition not created
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: SearchCondition not created
        default:
          $ref: '#/components/responses/error'
      summary: Returns a SearchCondition that is satisfied when at least one element
        matching the selector can be found.
  /until/newWindow:
    get:
      description: Returns a condition that depends on a new window having appeared.
      responses:
        '200':
          content:
            application/json:
              example:
                className: androidx.test.uiautomator.Until$3@41c9fcb
                oid: 1
              schema:
                $ref: '#/components/schemas/ObjectRef'
          description: SearchCondition created
        '404':
          content:
            application/json:
              example:
                errorMessage: Object not found
                errorStatusResponse: 1001
                status: ERROR
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Object not found
        default:
          $ref: '#/components/responses/error'
      summary: Returns a condition that depends on a new window having appeared.

components:
  schemas:
    AnyValue:
      # As the swagger-codegen (3.0.34) version we are using now does not support `oneOf` correctly, we are forced to use this
      description: 'Can be anything: string, number, array, object, etc., including `null`'
    BooleanResponse:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: the name of the contained value
        value:
          type: boolean
          description: the value
      example:
        name: isSomething
        value: true
    NumberResponse:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: the name of the contained value
        value:
          type: number
          description: the number
      example:
        name: count
        value: 5
    StatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - OK
            - ERROR
            - UNKNOWN
        statusCode:
          type: integer
        errorMessage:
          type: string
      example:
        status: ERROR
        statusCode: 100
        errorMessage: Operation could not be completed
    StringResponse:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: the name of the contained value
        value:
          type: string
          description: the value
      example:
        name: name
        value: value
    ClickBody:
      type: object
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/Point'
    CulebraInfo:
      type: object
      properties:
        versionName:
          type: string
        versionCode:
          type: integer
      required:
        - versionName
        - versionCode
      example:
        versionName: "Version 1.0"
        versionCode: 10
    CurrentPackageName:
      type: object
      properties:
        currentPackageName:
          type: string
          description: the current package name
      example:
        currentPackageName: com.android.calendar
    DisplayHeight:
      type: object
      properties:
        displayHeight:
          type: integer
          description: the current display height
      example:
        displayHeight: 1776
    DisplayRotationEnum:
      type: integer
      description: the current display rotation
      enum:
        - 0
        - 180
        - 270
        - 90
      example:
        0
    DisplayRotationResponse:
      type: object
      description: the display rotation response
      properties:
        displayRotation:
          $ref: '#/components/schemas/DisplayRotationEnum'
    DisplaySizeDp:
      type: object
      properties:
        displaySizeDpX:
          type: integer
          description: the display x in DP
        displaySizeDpY:
          type: integer
          description: the display y in DP
      example:
        displaySizeDpX: 2400
        displaySizeDpY: 1080
    DisplayWidth:
      type: object
      properties:
        displayWidth:
          type: integer
          description: the current display width
      example:
        displayHeight: 1080
    Help:
      type: object
      required:
        - text
      properties:
        text:
          type: string
      example:
        text: CulebraTester Help
    DisplayRealSize:
      type: object
      required:
        - device
        - x
        - 'y'
      properties:
        device:
          type: string
        x:
          type: integer
        'y':
          type: integer
        artWidth:
          type: integer
        artHeight:
          type: integer
        screenshotWidth:
          type: integer
        screenshotX:
          type: integer
        screenshotY:
          type: integer
      example:
        device: emulator
        x: 960
        'y': 1080
        screenshotWidth: 960
    LastTraversedText:
      type: object
      properties:
        lastTraversedText:
          type: string
          description: text of the last traversal event, else return an empty string
      example:
        lastTraversedText: ''
    Locale:
      type: object
      properties:
        language:
          type: string
        country:
          type: string
        variant:
          type: string
      example:
        language: es
      required:
        - language
    Pixel:
      type: object
      required:
        - r
        - g
        - b
        - a
      properties:
        r:
          type: integer
          format: int8
          example: 147
        g:
          type: integer
          format: int8
          example: 208
        b:
          type: integer
          format: int8
          example: 123
        a:
          type: integer
          format: int8
          example: 255
    Timeout:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
          example: 10000
      example:
        timeout: 10000
    WindowHierarchyChild:
      type: object
      properties:
        id:
          type: integer
        parent:
          type: integer
        text:
          type: string
        package:
          type: string
        checkable:
          type: boolean
        clickable:
          type: boolean
        index:
          type: integer
        contentDescription:
          type: string
        focusable:
          type: boolean
        resourceId:
          type: string
        enabled:
          type: boolean
        password:
          type: boolean
        longClickable:
          type: boolean
        longText:
          type: string
        clazz:
          type: string
        scrollable:
          type: boolean
        selected:
          type: boolean
        checked:
          type: boolean
        focused:
          type: boolean
        bounds:
          type: array
          items:
            type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/WindowHierarchyChild'
      example:
        $ref: '#/components/examples/windowHierarchyChild'
    WindowHierarchy:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        timestamp:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/WindowHierarchyChild'
      example:
        id: hierarchy
        text: Window Hierarchy
        timestamp: '2020-01-15T06:11:10Z'
        children:
          - id: 1
            parent: 0
            text: android.widget.FrameLayout__ id=1 parent=0
            package: com.android.systemui
            checkable: false
            clickable: false
            __index: 0
            contentDescription: Some description
            focusable: false
            resourceId: id1
            enabled: true
            password: false
            longClickable: false
            __text: Some text
            clazz: android.widget.FrameLayout
            scrollable: false
            selected: false
            bounds:
              - 0
              - 1794
              - 1080
              - 1920
            children: [ ]
    Pattern:
      # As the swagger-codegen (3.0.34) version we are using now does not support `oneOf` correctly, we cannot use this
      description: A pattern.
      type: object
      properties:
        regex:
          type: string
        flags:
          type: integer
      required:
        - regex
    Selector:
      description: A selector. As there is a problem with `swagger-codegen` generating OAS3.x `oneOf` we are using an internal encoding for now to support Patterns for `desc` and `text`.
        We use an special string that starts with a literal `Pattern:` followed by the actual pattern.
        For example `Pattern:^[a-z]+$`
      type: object
      properties:
        checkable:
          type: boolean
        checked:
          type: boolean
        clazz:
          type: string
        clickable:
          type: boolean
        depth:
          type: integer
        desc:
          # oneOf is not supported correctly by swagger-codegen therefore we are using an internal encoding
          #oneOf:
          #  - type: string
          #  - $ref: '#/components/schemas/Pattern'
          type: string
        hasChild:
          $ref: '#/components/schemas/Selector'
        hasDescendant:
          $ref: '#/components/schemas/Selector'
        pkg:
          type: string
        res:
          type: string
        scrollable:
          type: boolean
        text:
          # oneOf is not supported correctly by swagger-codegen therefore we are using an internal encoding
          #oneOf:
          #  - type: string
          #  - $ref: '#/components/schemas/Pattern'
          type: string
        index:
          type: integer
        instance:
          type: integer
      example:
        desc: Cancel
        clazz: android.widget.Button
        depth: 1
    ObjectRef:
      description: An object reference. This is a reference to an object that has been stored in the **Object Store**.
        The object reference can be later used by APIs requiring an object.
      type: object
      properties:
        oid:
          description: the object ID
          type: integer
        className:
          description: the class name
          type: string
      required:
        - oid
        - className
    Point:
      description: A point.
      type: object
      properties:
        x:
          type: integer
        'y':
          type: integer
    ProductName:
      description: The product name.
      type: object
      properties:
        productName:
          type: string
          description: product name of the device
      example:
        productName: sailfish
    Rect:
      description: Rect holds four integer coordinates for a rectangle. The rectangle is represented by the coordinates of its 4 edges (left, top, right bottom).
      type: object
      properties:
        left:
          type: integer
        top:
          type: integer
        right:
          type: integer
        bottom:
          type: integer
      required:
        - left
        - top
        - right
        - bottom
      example:
        left: 100
        top: 100
        right: 900
        bottom: 600
    Text:
      description: Some text.
      type: object
      properties:
        text:
          type: string
          description: the text in the object
      example:
        text: lorem ipsum
    PerformTwoPointerGestureBody:
      description: The body for a **two pointer gesture** action.
      type: object
      properties:
        startPoint1:
          $ref: '#/components/schemas/Point'
        startPoint2:
          $ref: '#/components/schemas/Point'
        endPoint1:
          $ref: '#/components/schemas/Point'
        endPoint2:
          $ref: '#/components/schemas/Point'
        steps:
          description: the number of steps for the gesture. Steps are injected about 5 milliseconds apart, so 100 steps may take around 0.5 seconds to complete.
          type: integer
          minimum: 0
      required:
        - startPoint1
        - startPoint2
        - endPoint1
        - endPoint2
        - steps
    SwipeBody:
      description: The body for a **swipe** action. Contains an array of points.
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Point'
        segmentSteps:
          type: integer
          minimum: 0
  examples:
    windowHierarchyChild:
      summary: A sample window hierarchy child
      value:
        id: 1
        parent: 0
        text: android.widget.FrameLayout__ id=1 parent=0
        package: com.android.systemui
        checkable: false
        clickable: false
        __index: 0
        contentDescription: Some description
        focusable: false
        resourceId: id1
        enabled: true
        password: false
        longClickable: false
        __text: Some text
        clazz: android.widget.FrameLayout
        scrollable: false
        selected: false
        bounds:
          - 0
          - 1794
          - 1080
          - 1920
        children: []
    errorStatusResponse:
      summary: Error status
      value:
        status: ERROR
        statusCode: 1001
        errorMessage: There was a problem
    selector:
      summary: Selector
      value:
        desc: Cancel
        clazz: android.widget.Button
        depth: 1
  responses:
    trueResponse:
      description: True response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BooleanResponse'
          example:
            name: hasProperty
            value: true
    falseResponse:
      description: False response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BooleanResponse'
          example:
            name: hasProperty
            value: false
    ok:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusResponse'
          example:
            ststus: OK
    error:
      description: Operation was not successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusResponse'
          example:
            status: ERROR
            statusCode: 1001
            errorMessage: There was a problem
